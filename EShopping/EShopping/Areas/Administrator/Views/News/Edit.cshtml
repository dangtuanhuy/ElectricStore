@model EShopping.Models.News

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Administrator/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="text-center">Edit News</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
    
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NewsId)

        <div class="form-group">
            @Html.LabelFor(model => model.NewTitles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewTitles, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewTitles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewsDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NewsDetails, new { @id = "editor1", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewsDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewsBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewsBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewsBy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.NewsImgs)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NewUpdate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewUpdate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                @Html.ValidationMessageFor(model => model.NewUpdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", "News")" class="btn btn-default">
        <i class="fa fa-sort-alpha-asc"></i>
        <span>

        </span>
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

  

}
